filter {
#  date {
##    match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"]
#    match => ["timestamp" , "MMM dd HH:mm:ss"]
#    target => "@timestamp"
#  }
  if ![postfix_queueid] and "postfix" in [tags] {
    drop {}
  } else if [program] == "postfix/qmgr" and [postfix_from]{
    aggregate {
      task_id => "%{postfix_queueid}"
      code => "
        map['postfix_from'] = event.get('postfix_from')
        map['postfix_from_domain'] = event.get('postfix_from_domain')
        map['postfix_size'] = event.get('postfix_size')
        map['postfix_nrcpt'] = event.get('postfix_nrcpt')
      "
      map_action => "create"
    }
  } else if [program] == "postfix/smtpd" {
    aggregate {
      task_id => "%{postfix_queueid}"
      code => "
        map['postfix_client_hostname'] = event.get('postfix_client_hostname')
        map['postfix_client_ip'] = event.get('postfix_client_ip')
      "
      map_action => "create"
    }
  } else if [program] == "postfix/cleanup" {
    aggregate {
      task_id => "%{postfix_queueid}"
      code => "
        map['postfix_message-id'] = event.get('postfix_message-id')
      "
      map_action => "create"
    }
  } else if [program] == "postfix/smtp" {
    aggregate {
      task_id => "%{postfix_queueid}"
#      code => "event.append(map)"
        code => "
                event.set('postfix_from', map['postfix_from'])
                event.set('postfix_from_domain', map['postfix_from_domain'])
                event.set('postfix_size', map['postfix_size'])
                event.set('postfix_nrcpt', map['postfix_nrcpt'])
                event.set('postfix_client_hostname', map['postfix_client_hostname'])
                event.set('postfix_client_ip', map['postfix_client_ip'])
                event.set('postfix_message-id', map['postfix_message-id'])
        "
        map_action => "update"
        end_of_task => true
	timeout => 10
    }
  }
}
